#!/bin/bash
# Calculates total number of words written in all diary entries. 

bold_colour="\e[1;37m"  # Bold White.
end_colour="\e[0m"

# cd to the entries directory.
cd "$dir_entries"

# Process command line options.
time_period=total
entry=
case $1 in 
    -m | --month)
        time_period=month
    ;;
    -s | --single)
        time_period=single
        entry="$2"
    ;;
    -t | --total)
        time_period=total
    ;;
esac


if [[ "$time_period" == single ]]; then 
    # Assume filename given is an absolute filename 
    # or a filename relative to the entries directory.

    # Calculate the wordcount cache filename.
    wordcount_file="$dir_wordcounts/${entry#$dir_entries/}"

    # If wordcount file is still relevant then use it.
    if [[ "$wordcount_file" -nt "$entry" ]]; then
        cat "$wordcount_file"
        #echo catted file

    # Otherwise generate wordcount data again and echo it.
    else
        wordcount_data=$(wc -w < "$entry")
        echo "$wordcount_data"
        #echo generated wordcount

        # Write this to the cache.
        mkdir -p $(dirname "$wordcount_file")
        echo "$wordcount_data" > "$wordcount_file"

    fi

else

    # Find the elapsed time since the first entry was written. 
    if [[ "$time_period" == total ]]; then
        first_month=$(ls -1 | head -n 1)
        [[ -z "$first_month" ]] && { echo "No entries found." >2; exit 1; }
        first=$(ls -1 "$first_month" | head -1)
        first=${first#diary-}
        first=${first%%-*}
        now=$(date +%s)
        let "time_diff=$now-$first"
        let "days=$time_diff/(60*60*24)"
    fi


    # For every month, find the word counts and entry counts.
    index=0
    total_words=
    total_entries=
    for month in *; do
        
        # Record which month it is.
        months[index]=$month

        # Word count.
        words[index]=$(cat $month/* | wc -w)

        # Entry count.
        entries[index]=$(ls -1 $month | wc -l)

        # Totals.
        let "total_words += ${words[index]}"
        let "total_entries += ${entries[index]}"

        let "index++"

    done

    # Add the total row.
    months[index]="Total"
    words[index]=$total_words
    entries[index]=$total_entries


    # Print it all in a nice format. 
    case "$time_period" in
        total)
            echo -e "You have written $bold_colour$total_words$end_colour words,"\
                    "in $bold_colour$total_entries$end_colour entries,"\
                    "over $bold_colour$days$end_colour days."
        ;;
        month)
            index=0
            until [[ -z ${months[index]} ]]; do
                printf "%7s:%8s words,%6s entries\n" "${months[index]}" \
                       "${words[index]}" "${entries[index]}"
                let "index++"
            done
        ;;
    esac

fi
