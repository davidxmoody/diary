#!/bin/bash

# TODO cache contains results in entries
# TODO add settings module, encapsulate all user and systempreferences 

real_path=$(readlink -f $0)
real_path=${real_path%/*}
export real_path

# Source the default settings file and then source the user's settings file. 
source "$real_path/../config/diaryrc-default"

# The user's diaryrc file is looked for in the following locations and the 
# first existing file is used.
paths=( "$real_path/../config/diaryrc"   \
        "$real_path/../config/.diaryrc"  \
        "$HOME/diaryrc"                  \
        "$HOME/.diaryrc"                 )

for path in "${paths[@]}"; do
    if [[ -f "$path" ]]; then 
        source "$path"
        break
    fi
done

# Export the diary subdirectories.
export dir_diary
export dir_data="$dir_diary/data"
export dir_entries="$dir_data/entries"
export dir_checklists="$dir_data/checklists"
export dir_cache="$dir_diary/cache"
export dir_wordcounts="$dir_cache/wordcounts"
export dir_logs="$dir_data/logs"
export dir_chain="$dir_cache/chain"
export dir_entries_cache="$dir_cache/entries"

# Export other relevant data.
export device_name

export diary_edit_default_editor
export diary_new_entry_default_editor

export header_minimum_width
export long_date_format
export short_date_format
export very_short_date_format
export pad_char
export metadata_colour
export pad_colour
export end_colour

export search_print_entries
export search_default_range
export search_default_max_matches

export tags_file


# Check for command.
command="$1"
shift

case "$command" in
    chain)
        python3 "$real_path/diary_chain.py" "$@"
    ;;
    edit)
        python3 "$real_path/diary_edit.py" "$@" 
    ;;
    list | ls)
        python3 "$real_path/diary_list.py" "$@"
    ;;
    new)
        python3 "$real_path/diary_edit.py" --new "$@" 
    ;;
    search)
        python3 "$real_path/diary_search.py" "$@" 
    ;;
    wordcount | wc)
        python3 "$real_path/diary_wordcount.py" "$@"
    ;;
esac
