#!/usr/bin/env python3
# Script for finding the names of diary entries.

# Should be able to return filenames corresponding to specific timestamps, 
# ranges of entries, single entries and new entries (with a given date). 

import os
import math
import datetime
import time
import argparse

# Load constants that have previously been sourced and exported in bash.
# TODO: change this so that it uses a better way to store and load them. 
dir_entries = os.environ['dir_entries']
device_name = os.environ['device_name']

def new_entry_filename(created_on=None, device_name=device_name):
    """Return the full path of a new (not currently existing) entry."""

    if created_on==None: created_on = datetime.datetime.now()
    timestamp = int(math.floor(time.mktime(created_on.timetuple())))

    filename = 'diary-{}-{}.txt'.format(timestamp, device_name)
    month = '{}-{}'.format(created_on.year, created_on.month)
    path = os.path.realpath(os.path.join(dir_entries, month, filename))

    # TODO: create month directory if it does not exist. 

    return path


# TODO: function to get entries from entry(s) "descriptor".

# TODO: process all command line arguments, make compatible with previous 
#       bash version of the script. 



parser = argparse.ArgumentParser(description='Get entry filenames.')
#parser.add_argument('-t', '--timestamp', metavar='timestamp', type=int, 
#                    action='append',
#                    help='timestamp to use when creating a new entry')
#parser.add_argument('-r', '--range', type=int, action='append',
#                    help='range is awesome')
#parser.add_argument('-b', '--bool', action='store_true')
#parser.add_argument('--version', action='version', 
#                    version='first version evar!')
#args = parser.parse_args()

parser.add_argument('-n', '--new', nargs='?', type=int, action='append',
                    default=argparse.SUPPRESS,
                    help='')

parser.add_argument


args = parser.parse_args()

print(args)
print('new' in args)
